{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfhrmigration"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "hr-migration-server.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "hr-database"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "churtado"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/department_backup_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy table to avro file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Destination_departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "department_avro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data backup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Destination_departments')]",
				"[concat(variables('factoryId'), '/datasets/department_avro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/department_restore_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy avro file to table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AvroSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat('department/', formatDateTime(utcNow(), 'yyyy-MM-dd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*.avro",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "department_avro",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data restore"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/department_avro')]",
				"[concat(variables('factoryId'), '/datasets/Destination_departments')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/departments_migration_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_file_to_table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "department"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Source_departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_departments",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-01T05:24:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_departments')]",
				"[concat(variables('factoryId'), '/datasets/Destination_departments')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hired_employees_backup_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy table to avro file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Destination_hired_employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "hired_employees_avro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data backup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Destination_hired_employees')]",
				"[concat(variables('factoryId'), '/datasets/hired_employees_avro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hired_employees_migration_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_file_to_table",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_hired_employees",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceHiredEmployees": {},
									"sinkHiredEmployees": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-01T06:03:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_hired_employees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hired_employees_restore_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy avro file to table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AvroSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat('hired_employees/', formatDateTime(utcNow(), 'yyyy-MM-dd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*.avro",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.hired_employees",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "hired_employees_avro",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_hired_employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data restore"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hired_employees_avro')]",
				"[concat(variables('factoryId'), '/datasets/Destination_hired_employees')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jobs_backup_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy table to avro file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AvroSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "AvroWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Destination_jobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "jobs_avro",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data backup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Destination_jobs')]",
				"[concat(variables('factoryId'), '/datasets/jobs_avro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jobs_migration_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_file_to_table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "job"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Source_jobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_jobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-01T05:25:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_jobs')]",
				"[concat(variables('factoryId'), '/datasets/Destination_jobs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jobs_restore_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy avro file to table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AvroSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat('jobs/', formatDateTime(utcNow(), 'yyyy-MM-dd'))",
										"type": "Expression"
									},
									"wildcardFileName": "*.avro",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "jobs_avro",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Destination_jobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "data restore"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/jobs_avro')]",
				"[concat(variables('factoryId'), '/datasets/Destination_jobs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_departments')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "id",
						"type": "Int32"
					},
					{
						"name": "department",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[departments]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_hired_employees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "datetime",
						"type": "varchar"
					},
					{
						"name": "department_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "job_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[hired_employees]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_jobs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "id",
						"type": "Int32"
					},
					{
						"name": "job",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[jobs]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_departments')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "departments.csv",
						"folderPath": "departments",
						"container": "datasources"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_hired_employees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "hired_employees.csv",
						"folderPath": "hired_employees",
						"container": "datasources"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_jobs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "jobs.csv",
						"folderPath": "jobs",
						"container": "datasources"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/department_avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data backup"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('department/', formatDateTime(utcNow(), 'yyyy-MM-dd'))\n",
							"type": "Expression"
						},
						"container": "backup"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hired_employees_avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data backup"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('hired_employees/', formatDateTime(utcNow(), 'yyyy-MM-dd'))\n",
							"type": "Expression"
						},
						"container": "backup"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jobs_avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "data backup"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('jobs/', formatDateTime(utcNow(), 'yyyy-MM-dd'))\r\n",
							"type": "Expression"
						},
						"container": "backup"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_hired_employees')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_hired_employees",
								"type": "DatasetReference"
							},
							"name": "sourceHiredEmployees"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Destination_hired_employees",
								"type": "DatasetReference"
							},
							"name": "sinkHiredEmployees",
							"description": "Export data to destination_hired_employees"
						}
					],
					"transformations": [
						{
							"name": "ModifyNullData",
							"description": "Creating/updating the columns 'Column_1, Column_2, Column_3, Column_4, Column_5"
						},
						{
							"name": "AlterRowUpsert"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> sourceHiredEmployees",
						"sourceHiredEmployees derive(Column_2 = iif(isNull(Column_2), \"Unknown\", Column_2),",
						"          Column_3 = iif(isNull(Column_3), \"2999-01-01T00:00:00Z\", Column_3),",
						"          Column_4 = iif(isNull(Column_4), -1, toInteger(Column_4)),",
						"          Column_5 = iif(isNull(Column_5), -1, toInteger(Column_5))) ~> ModifyNullData",
						"ModifyNullData alterRow(upsertIf(true())) ~> AlterRowUpsert",
						"AlterRowUpsert sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          id as integer,",
						"          name as string,",
						"          datetime as string,",
						"          department_id as integer,",
						"          job_id as integer",
						"     ),",
						"     deletable:true,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = Column_1,",
						"          name = Column_2,",
						"          datetime = Column_3,",
						"          department_id = Column_4,",
						"          job_id = Column_5",
						"     )) ~> sinkHiredEmployees"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_hired_employees')]",
				"[concat(variables('factoryId'), '/datasets/Destination_hired_employees')]"
			]
		}
	]
}