{
	"name": "dataflow_hired_employees",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Source_hired_employees",
						"type": "DatasetReference"
					},
					"name": "sourceHiredEmployees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Destination_hired_employees",
						"type": "DatasetReference"
					},
					"name": "sinkHiredEmployees",
					"description": "Export data to destination_hired_employees"
				}
			],
			"transformations": [
				{
					"name": "ModifyNullData",
					"description": "Creating/updating the columns 'Column_1, Column_2, Column_3, Column_4, Column_5"
				},
				{
					"name": "AlterRowUpsert"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> sourceHiredEmployees",
				"sourceHiredEmployees derive(Column_2 = iif(isNull(Column_2), \"Unknown\", Column_2),",
				"          Column_3 = iif(isNull(Column_3), \"2999-01-01T00:00:00Z\", Column_3),",
				"          Column_4 = iif(isNull(Column_4), -1, toInteger(Column_4)),",
				"          Column_5 = iif(isNull(Column_5), -1, toInteger(Column_5))) ~> ModifyNullData",
				"ModifyNullData alterRow(upsertIf(true())) ~> AlterRowUpsert",
				"AlterRowUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          id as integer,",
				"          name as string,",
				"          datetime as string,",
				"          department_id as integer,",
				"          job_id as integer",
				"     ),",
				"     deletable:true,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id = Column_1,",
				"          name = Column_2,",
				"          datetime = Column_3,",
				"          department_id = Column_4,",
				"          job_id = Column_5",
				"     )) ~> sinkHiredEmployees"
			]
		}
	}
}